{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","sample-fishes.js","components/Login.js","base.js","components/Inventory.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","React","Component","constructor","arguments","myInput","createRef","goToStore","event","preventDefault","storeName","this","current","value","props","history","push","render","_jsxs","className","onSubmit","children","_jsx","type","ref","required","placeholder","defaultValue","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","_objectSpread","TransitionGroup","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","async","store","fetch","storeId","context","post","data","authData","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","componentDidMount","onAuthStateChanged","loadSampleFishes","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","componentDidUpdate","setItem","stringify","componentWillUnmount","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.d9de6b00.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n  static propTypes = {\n    history: PropTypes.object\n  }\n\n  goToStore = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout:{ enter: 500, exit: 500 }\n    };\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n          <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition \n                classNames=\"count\" \n                key={count} \n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func,\n  }\n\n  createFish = event => {\n    // 1.  stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n        image: PropTypes.string,\n        name: PropTypes.string, \n        desc: PropTypes.string,\n        status: PropTypes.string,\n        price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  }\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update that fish\n    // 1. Take a copy of the curernt fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n  <nav className=\"Login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory</p>\n    <button \n    className=\"github\" \n    onClick={() => props.authenticate(\"Github\")}>\n      Log In With GitHub\n    </button>\n    <button \n    className=\"twitter\" \n    onClick={() => props.authenticate(\"Twitter\")}>\n      Log In With Twitter\n    </button>\n    <button \n    className=\"facebook\" \n    onClick={() => props.authenticate(\"Facebook\")}>\n      Log In With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCgjb5NHNPEMzcWv537SmORYAnN2VWwyAo\",\n    authDomain: \"catch-of-the-day-ben-altieri.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-ben-altieri-default-rtdb.firebaseio.com\"\n})\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// this is a named export\nexport { firebaseApp };\n\n//this is a default export\nexport default base;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport fishes from \"../sample-fishes\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func\n  }\n\n  state = {\n    uid: null,\n    owner: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    })\n  }\n\n  authHandler = async authData => {\n    // 1. Look up the current store in teh firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. Claim it if there is no store owner\n    if (!store.owner) {\n      // save it as our own, you can also use email address instead of uid\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    })\n  };\n\n  authenticate = (provider) => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log('Logging out!');\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>\n\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // 2. Check if they are NOT the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // 3. they must be the owner, just render the inventory\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string, \n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n  }\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from \"../sample-fishes\";\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  }\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.order);\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update that state\n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    // 1. take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    // 3.  update state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. remove that itemf from order\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!?!!!!1111</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}